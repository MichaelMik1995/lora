<?php
/*
    Plugin {Name} generated for framework Lora, copyright by company MiroKa
    Plugin Description in Readme.MD
*/
declare (strict_types=1);

namespace {Company}\{Name};
use App\Core\Interface\InstanceInterface;

class {Name} implements InstanceInterface
{
    private static $_instance;
    private static int $_instance_id;
    private array $plugin_data;

    /**
     * Do not change the __construct method - Keep blank from ARGS!
     */
    public function __construct(){}

    /**
     * Defined arguments will be inserted via DI - Dependency injection is active
     */
    public function __constructor()
    {

    }

    /**
     * Do not change the instance method
     */
    public static function instance()
    {
        if(self::$_instance == null)
        {
            self::$_instance_id = rand(000000,999999);
            self::$_instance = new self();
        }

        return self::$_instance;
    }

    /**
     * Returns an instance id - do not change getInstanceId() method
     */
    public static function getInstanceId(): Int
    {
        return self::$_instance_id;
    }

    /** PLUGIN METHODS **/

    //Place your methods


    /** MAGICAL METHODS **/
    public function __set($name, $value) {
        $this->plugin_data[$name] = $value;
    }

    public function __get($name) {
        if (isset($this->plugin_data[$name])) {
            return $this->plugin_data[$name];
        }
        return null;
    }
}
