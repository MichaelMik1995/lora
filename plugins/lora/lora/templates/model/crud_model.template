<?php
declare (strict_types=1);

namespace App\Model;

use App\Core\Model;
use App\Core\Database\Database;
use App\Middleware\Auth;
use Lora\Easytext\Easytext;

class {Model_name} extends Model
{

    protected $table = "{model_name}";
    
    public function __construct($injected_classes)
    {
        $this->init();
    }
    
    /**
     * 
     * @param string $order_by <p>Order tables in rows (ex.: id ASC)</p>
     * @return object <p>Returns all rows from table {model_name}</p>
     */
    public function getAll(string $order_by = "id ASC"): Array
    {

        $db_query = $this->database->tableAllData($order_by);
        if(!empty($db_query))
        {
            foreach($db_query as $row)
            {
                $id = $i++;
                $url = $row["url"];
                //Filter indexes from $row
                $return_array[$id] = $this->get($url);
            }

            array_filter($return_array, "is_string", ARRAY_FILTER_USE_KEY);
            return $return_array;
        }
        else
        {
            return [];
        }
    }
    
    /**
     * 
     * @return object <p>Returns one row from table depends on URL key</p>
     * @see Database()->tableRowByRoute()
     */
    public function get(): Array
    {
        $db_query = $this->database->tableRowByRoute();

        /* Uncomment the following lines if you want to change $db_query structure
        if(!empty($db_query))
        {
            $content = $db_query["content"];
                        
            return $db_query;
        }
        else
        {
            return [];
        }
        */
    }
    
    public function insert(array $insert_values)
    {
        // Insert new row
        return $this->database->tableInsert($this->table, $insert_values);
    }
    
    public function update(array $set, string $route_key = "url")
    {
        // update row
        return $this->database->tableUpdateByRoute($set, $route_key);
    }
    
    public function delete(string $route_key = "url")
    {
        // delete row
        return $this->database->tableDeleteByRoute($route_key);
    }
}
?>
